<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sky.check.client.BaseCheckDetailMapper">
  <resultMap id="BaseResultMap" type="org.sky.check.model.BaseCheckDetail">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PLAN_CODE" jdbcType="VARCHAR" property="planCode" />
    <result column="COM_CODE" jdbcType="VARCHAR" property="comCode" />
    <result column="COM_NAME" jdbcType="VARCHAR" property="comName" />
    <result column="CHECKER" jdbcType="VARCHAR" property="checker" />
    <result column="RESULT" jdbcType="CHAR" property="result" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="NOTE" jdbcType="VARCHAR" property="note" />
    <result column="CREATER" jdbcType="VARCHAR" property="creater" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATER" jdbcType="VARCHAR" property="updater" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PLAN_CODE, COM_CODE, CHECKER, RESULT, STATE, NOTE, CREATER, CREATE_TIME, UPDATER, UPDATE_TIME,
    (SELECT NAME FROM BASE_COMMODITY WHERE CODE = COM_CODE) AS COM_NAME
  </sql>
  <select id="selectByExample" parameterType="org.sky.check.model.BaseCheckDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MySqlPaginationSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_check_detail
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from base_check_detail
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.sky.check.model.BaseCheckDetailExample">
    delete from base_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.sky.check.model.BaseCheckDetail">
    insert into base_check_detail (ID, PLAN_CODE, COM_CODE, 
      CHECKER, RESULT, STATE, 
      NOTE, CREATER, CREATE_TIME, 
      UPDATER, UPDATE_TIME)
    values (#{id,jdbcType=VARCHAR}, #{planCode,jdbcType=VARCHAR}, #{comCode,jdbcType=VARCHAR}, 
      #{checker,jdbcType=VARCHAR}, #{result,jdbcType=CHAR}, #{state,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.sky.check.model.BaseCheckDetail">
    insert into base_check_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="planCode != null">
        PLAN_CODE,
      </if>
      <if test="comCode != null">
        COM_CODE,
      </if>
      <if test="checker != null">
        CHECKER,
      </if>
      <if test="result != null">
        RESULT,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="note != null">
        NOTE,
      </if>
      <if test="creater != null">
        CREATER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updater != null">
        UPDATER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="planCode != null">
        #{planCode,jdbcType=VARCHAR},
      </if>
      <if test="comCode != null">
        #{comCode,jdbcType=VARCHAR},
      </if>
      <if test="checker != null">
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.sky.check.model.BaseCheckDetailExample" resultType="java.lang.Long">
    select count(*) from base_check_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_check_detail
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.planCode != null">
        PLAN_CODE = #{record.planCode,jdbcType=VARCHAR},
      </if>
      <if test="record.comCode != null">
        COM_CODE = #{record.comCode,jdbcType=VARCHAR},
      </if>
      <if test="record.checker != null">
        CHECKER = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        RESULT = #{record.result,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        CREATER = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        UPDATER = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_check_detail
    set ID = #{record.id,jdbcType=VARCHAR},
      PLAN_CODE = #{record.planCode,jdbcType=VARCHAR},
      COM_CODE = #{record.comCode,jdbcType=VARCHAR},
      CHECKER = #{record.checker,jdbcType=VARCHAR},
      RESULT = #{record.result,jdbcType=CHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      NOTE = #{record.note,jdbcType=VARCHAR},
      CREATER = #{record.creater,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATER = #{record.updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sky.check.model.BaseCheckDetail">
    update base_check_detail
    <set>
      <if test="planCode != null">
        PLAN_CODE = #{planCode,jdbcType=VARCHAR},
      </if>
      <if test="comCode != null">
        COM_CODE = #{comCode,jdbcType=VARCHAR},
      </if>
      <if test="checker != null">
        CHECKER = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        RESULT = #{result,jdbcType=CHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        UPDATER = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sky.check.model.BaseCheckDetail">
    update base_check_detail
    set PLAN_CODE = #{planCode,jdbcType=VARCHAR},
      COM_CODE = #{comCode,jdbcType=VARCHAR},
      CHECKER = #{checker,jdbcType=VARCHAR},
      RESULT = #{result,jdbcType=CHAR},
      STATE = #{state,jdbcType=VARCHAR},
      NOTE = #{note,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATER = #{updater,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="MySqlPaginationSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin},#{page.rows} ]]>
    </if>
  </sql>
  <insert id="insertBaseCheckDetailByPlan" parameterType="map">
  	insert into base_check_detail (ID, PLAN_CODE, COM_CODE, 
      CHECKER, STATE,CREATER, CREATE_TIME)
  	SELECT REPLACE(UUID(),'-','') AS ID,
			PLAN_CODE,
			COM_CODE,
			EMP_CODE AS CHECKER,
			'0' AS STATE,
			'SYS_JOB' AS CREATER,
			NOW() AS CREATETIME
			FROM
			(
			SELECT
			DISTINCT 
			(SELECT CONCAT(ORGAN_CODE,'_','${params.date}') FROM SYS_USER WHERE CODE = BCC.EMP_CODE) AS PLAN_CODE,
			BC.CODE AS COM_CODE,
			BCC.EMP_CODE AS EMP_CODE
			FROM
			BASE_COMMODITY BC, BASE_COMCHECK_CFG BCC
			WHERE BC.CATE_CODE LIKE CONCAT(BCC.COM_CATE,'%')
			) AS TAB
  </insert>
  <select id="selectBaseCheckPlanComCateList" parameterType="map" resultType="java.util.Map">
	select distinct bcd.plan_code as plan_code,bcc.code as cate_code,bcc.name as cate_name,bcc.seq 
	from 
		base_check_detail bcd,
		base_commodity bc,
		base_com_cate  bcc
	where 
		bc.cate_code=bcc.code
		and bcd.com_code = bc.code
		<if test="params.planCode != null">
			and bcd.plan_code=#{params.planCode,jdbcType=VARCHAR}
		</if>
		<if test="params.checker != null">
			and bcd.checker=#{params.checker,jdbcType=VARCHAR}
		</if>
		<if test="params.state != null">
			and bcd.state=#{params.state,jdbcType=VARCHAR}
		</if>
	order by bcc.code,bcc.seq
  </select>
</mapper>